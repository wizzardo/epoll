apply plugin: 'maven-publish'
apply plugin: 'signing'

if (!project.hasProperty("ossrhUsername"))
    ext.ossrhUsername = ""
if (!project.hasProperty("ossrhPassword"))
    ext.ossrhPassword = ""

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task natives_x32(type: Jar) {
    archiveClassifier = 'natives-x32'
    from 'build/libepoll-core_x32.so'
    from 'build/libepoll-ssl_x32.so'
}
task natives_x64(type: Jar) {
    archiveClassifier = 'natives-x64'
    from 'build/libepoll-core_x64.so'
    from 'build/libepoll-ssl_x64.so'
}
task natives_aarch64(type: Jar) {
    archiveClassifier = 'natives-aarch64'
    from 'build/libepoll-core_aarch64.so'
    from 'build/libepoll-ssl_aarch64.so'
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifact natives_x32
            artifact natives_x64
            artifact natives_aarch64

            groupId = project.group
            artifactId = project.name
            version = project.version

            pom {
                url = 'https://github.com/wizzardo/epoll'
                description project.ext.descriptionString

                scm {
                    connection = 'scm:git:git@github.com:wizzardo/epoll.git'
                    developerConnection = 'scm:git:git@github.com:wizzardo/epoll.git'
                    url = 'https://github.com/wizzardo/epoll'
                }


                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        id = 'Wizzardo'
                        name = 'Mikhail Bobrutskov'
                        email = 'wizzardobox@gmail.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = uri('https://oss.sonatype.org/service/local/staging/deploy/maven2/')
            def snapshotsRepoUrl = uri('https://oss.sonatype.org/content/repositories/snapshots/')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ossrhUsername
                password ossrhPassword
            }

        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
